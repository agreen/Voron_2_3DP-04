# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_410025000650535556323420-if00
restart_method: command
##--------------------------------------------------------------------

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 4000             #Max 4000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 200 for 1.8 degree stepper
endstop_pin: PG6
position_min: 0
##--------------------------------------------------------------------

##  Uncomment below for 250mm build
#position_endstop: 250
#position_max: 250

##  Uncomment for 300mm build
position_endstop: 300
position_max: 300

##  Uncomment for 350mm build
#position_endstop: 350
#position_max: 350

##--------------------------------------------------------------------
homing_speed: 50 #25   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
run_current: 1.1 #0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 200 for 1.8 degree stepper
endstop_pin: PG9
position_min: 0
##--------------------------------------------------------------------

##  Uncomment for 250mm build
#position_endstop: 250
#position_max: 250

##  Uncomment for 300mm build
position_endstop: 300
position_max: 300

##  Uncomment for 350mm build
#position_endstop: 350
#position_max: 350

##--------------------------------------------------------------------
homing_speed: 50 #25  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
run_current: 1.1 #0.8
sense_resistor: 0.110
stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
#endstop_pin: PG10 #commented for Voron TAP
endstop_pin: probe:z_virtual_endstop # Voron TAP
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
# position_endstop: -0.5 #commented for Voron TAP
##--------------------------------------------------------------------

##  Uncomment below for 250mm build
#position_max: 210

##  Uncomment below for 300mm build
position_max: 260

##  Uncomment below for 350mm build
#position_max: 310

##--------------------------------------------------------------------
position_min: -10
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999


#####################################################################
#   Extruder
#####################################################################

##  Connected to MOTOR_6
##  Heater - HE0
##  Thermistor - T0
[extruder]
step_pin: PE2
dir_pin: !PE3
enable_pin: !PD4
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 22.6789511 #21.9914 #22.6789511   #Bondtech 5mm Drive Gears
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:10 for Stealthburner/Clockwork 2
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
gear_ratio: 50:10               #BMG Gear Ratio
microsteps: 32
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: PA2
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PF4
min_temp: 10
max_temp: 270
max_power: 1.0
min_extrude_temp: 170
control = pid
pid_kp = 26.213
pid_ki = 1.304
pid_kd = 131.721
##  Try to keep pressure_advance below 1.0
pressure_advance: 0.05
##  Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040
max_extrude_only_distance: 100.0


##  E0 on MOTOR6
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: PE1
interpolate: false
run_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Bed Heater
#####################################################################


##  SSR Pin - HE1
##  Thermistor - TB
[heater_bed]
heater_pin: PA1
##  Validate the following thermistor type to make sure it is correct
##  Keenovo branded bed heaters should use Generic 3950
##  LDO branded bed heaters will have the sensor type labelled on the heater
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PF3
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.6
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
#   Probe
#####################################################################

##  Inductive Probe
##  This probe is not used for Z height, only Quad Gantry Leveling
[probe]
pin: PG15
x_offset: 0
y_offset: 0 # 25.0 #commented for Voron TAP
#z_offset: 0
speed: 3 #10.0 #commented for Voron TAP
#added for Voron TAP
lift_speed: 120.0
samples: 3 #5 #commented for Voron TAP
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 3
# Voron TAP
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

#####################################################################
#   Fan Control
#####################################################################

##  Print Cooling Fan - FAN0
[fan]
pin: PA8
kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10


##  Hotend Fan - FAN1
[heater_fan hotend_fan]
pin: PE5
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

##  Controller fan - FAN2
[controller_fan controller_fan]
pin: PD12
kick_start_time: 0.5
heater: heater_bed
fan_speed: 0.5

##  Filter fan - FAN3
#[heater_fan filter_fan]
#pin: PD13
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0


##  Exhaust fan - FAN3
#[heater_fan exhaust_fan]
#pin: PD13
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0

#####################################################################
#   LED Control
#####################################################################

[output_pin caselight]
## Chamber Lighting - CNC_FAN5
pin: PD15
pwm:true
shutdown_value: 0
value:0
cycle_time: 0.01

#####################################################################
#   Additional Sensors
#####################################################################

[thermistor CMFB103F3950FANT]
temperature1: 0.0
resistance1: 32116.0
temperature2: 40.0
resistance2: 5309.0
temperature3: 80.0
resistance3: 1228.0

#[temperature_sensor chamber]
### Chamber Temperature - T1
#sensor_type: CMFB103F3950FANT
#sensor_pin: PF5
#min_temp: 0
#max_temp: 100
#gcode_id: chamber_th

[temperature_fan chamber]
pin: PD13 # filter_fan
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 5.0
cycle_time:0.01
off_below:0.1
sensor_type: CMFB103F3950FANT
sensor_pin: PF5
min_temp: 0
max_temp: 80
target_temp: 35.0
control: watermark
gcode_id: C




#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 5400 #1800

#timeout: 3600
#gcode:
#    {% if printer.pause_resume.is_paused %}
#        M118 Bypassed Timeout
#        M117 Bypassed Timeout
#    {% else %}
#        M118 Timeout Reached
#        M117 Timeout Reached
#        TURN_OFF_HEATERS
#        M84
#    {% endif %}
#[idle_timeout]
#gcode:
#    {% if not printer.pause_resume.is_paused %}
#      TURN_OFF_HEATERS
#      M84
#      STATUS_OFF
#    {% endif %}


#it's based on idle_timeout
#[4:28 PM]
#or when the motors are disabled
#[4:28 PM]
#I have a macro which runs 10 minutes after the printer completes which will turn off heaters, fans, etc.
#[4:29 PM]
#in PRINT_END:

#UPDATE_DELAYED_GCODE ID=DELAYED_OFF DURATION=600    ; turn everything off in 10 min
#
#
#then elsewhere in printer.cfg or an included file:

#[delayed_gcode DELAYED_OFF]
#gcode:
#    {% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
#        OFF ; if not printing, call "OFF" macro, to turn off everything (heaters, motors, lights, fans)
#    {% endif %}

## Just a shortcut to turn EVERYTHING off with one command (beds, heaters, motors, lights)
#[gcode_macro OFF]
#gcode:
#    M84                                  ; turn steppers off
#    TURN_OFF_HEATERS                     ; turn bed / hotend off
#    SET_PIN PIN=nevermore VALUE=0        ; turn nevermore off
#    M107                                 ; turn print cooling fan off
#    SET_PIN PIN=caselight VALUE=0        ; turn light off
#    INITIAL_RGB
#[4:30 PM]
#you can cancel the shutdown if needed with 
#UPDATE_DELAYED_GCODE ID=DELAYED_OFF DURATION=0

[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
home_xy_position: 150,150 #-10,-10 # Commented for Voron TAP
speed:100
z_hop:10
z_hop_speed:10


##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
[quad_gantry_level]

#--------------------------------------------------------------------
##  Gantry Corners for 250mm Build
##  Uncomment for 250mm build
#gantry_corners:
#   -60,-10
#   310, 320
##  Probe points
#points:
#   50,25
#   50,175
#   200,175
#   200,25
    
##  Gantry Corners for 300mm Build
##  Uncomment for 300mm build
gantry_corners:
   -60,-10
   360,370
#  Probe points
points:
   50,25
   50,225
   250,225
   250,25

##  Gantry Corners for 350mm Build
##  Uncomment for 350mm build
#gantry_corners:
#   -60,-10
#   410,420
##  Probe points
#points:
#   50,25
#   50,275
#   300,275
#   300,25

#--------------------------------------------------------------------
speed: 500 #100
horizontal_move_z: 5 #10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Displays
#####################################################################

[display]
#  mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

[output_pin beeper]
pin: EXP1_1
value: 0
shutdown_value: 0
pwm: True
cycle_time: 0.0005 ; Default beeper tone in kHz. 1 / 0.0005 = 2000Hz (2kHz)
#cycle_time: 0.001

[neopixel btt_mini12864]
#  To control Neopixel RGB in mini12864 display
pin: EXP1_6
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

##  Set RGB values on boot up for each Neopixel. 
##  Index 1 = display, Index 2 and 3 = Knob
##  DOCUMENTATION IS WRONG - Index 3 = display, Index 1 and 2 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        SET_LED LED=btt_mini12864 RED=0 GREEN=0 BLUE=0.5 INDEX=1 TRANSMIT=0
        SET_LED LED=btt_mini12864 RED=0 GREEN=0 BLUE=0.4 INDEX=2 TRANSMIT=0
        SET_LED LED=btt_mini12864 RED=0 GREEN=0 BLUE=1 INDEX=3 


# Enable object exclusion
[exclude_object]



#--------------------------------------------------------------------


#####################################################################
#   Macros
#####################################################################

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    ##  Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##  Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600
    
    #  Uncomment for 300 build
    G0 X150 Y150 Z30 F3600
    
    ##  Uncomment for 350mm build
    #G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------
    RESTORE_GCODE_STATE NAME=STATE_G32

   
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
#[gcode_macro PRINT_START]
#gcode:
#    G32                            ; home all axes
#    G90                            ; absolute positioning
#    G1 Z20 F3000                   ; move nozzle away from bed
   

#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
#[gcode_macro PRINT_END]
#gcode:
#    # safe anti-stringing move coords
#    {% set th = printer.toolhead %}
#    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
#    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
#    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
#    
#    SAVE_GCODE_STATE NAME=STATE_PRINT_END
#    
#    M400                           ; wait for buffer to clear
#    G92 E0                         ; zero the extruder
#    G1 E-5.0 F1800                 ; retract filament
#    
#    TURN_OFF_HEATERS
    
#    G90                                      ; absolute positioning
#    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
#    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
#    M107                                     ; turn off fan
    
#    BED_MESH_CLEAR
#    RESTORE_GCODE_STATE NAME=STATE_PRINT_END


[force_move]
enable_force_move: True

## UNSAFE_MOVE_TOOL
## Move the toolhead without homing
########## Parameters ##########
## X: The X distance to move by (default: 0) mm
## Y: The Y distance to move by (default: 0) mm
## Z: The Z distance to move by (default: 10) mm
## F: The feedrate to use (default: 10) mm/s
[gcode_macro UNSAFE_MOVE_TOOL]
description: Move the toolhead without homing
gcode:
    {% set z = params.Z|default(0)|float %}
    {% set x = params.X|default(0)|float %}
    {% set y = params.Y|default(0)|float %}
    {% set f = params.F|default(10)|float %}
    G90
    SET_KINEMATIC_POSITION Z={(printer.toolhead.axis_maximum.z/2)} X={(printer.toolhead.axis_maximum.x/2)} Y={(printer.toolhead.axis_maximum.y/2)}
    G0 X{(printer.toolhead.axis_maximum.x/2)+x} Y{(printer.toolhead.axis_maximum.y/2)+y} Z{(printer.toolhead.axis_maximum.z/2)+z} F{ (f*60) }
    M84


#TODO: Modify to include a variable, and design for delayed M84
#[gcode_macro M84]
#rename_existing: M984
#gcode:
#    SET_KINEMATIC_POSITION Z=0
#    M984

#[gcode_macro QUAD_GANTRY_LEVEL]
#rename_existing: BASE_QUAD_GANTRY_LEVEL
#variable_qgld: 0
#gcode:
#  {% if qgld|int == 0 %}
#    BASE_QUAD_GANTRY_LEVEL
#    SET_GCODE_VARIABLE MACRO=quad_gantry_level VARIABLE=qgld VALUE=1
#  {% endif %}

#[gcode_macro M84]
#rename_existing: BASE_M84
#gcode:
#  BASE_M84
#  SET_GCODE_VARIABLE MACRO=quad_gantry_level VARIABLE=qgld VALUE=0

#[gcode_macro M18]
#rename_existing: BASE_M18
#gcode:
#  BASE_M18
#  SET_GCODE_VARIABLE MACRO=quad_gantry_level VARIABLE=qgld VALUE=0


[bed_mesh]
speed: 300
horizontal_move_z: 10
##--------------------------------------------------------------------
##	Uncomment below for 250mm build
#mesh_min: 40, 40
#mesh_max: 210,210

##	Uncomment for 300mm build
mesh_min: 40, 40
mesh_max: 260,260

##	Uncomment for 350mm build
#mesh_min: 40, 40
#mesh_max: 310,310
##--------------------------------------------------------------------
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5 # Values should be odd, so one point is directly at bed center
algorithm: bicubic
# parameter deprecated relative_reference_index: 12 # Update when changing probe_count, to ((x points * y points) - 1) / 2. (the center point)
zero_reference_position: 150, 150


[include stealthburner_leds.cfg]
[include lcd_tweaks.cfg]
#[include mainsail.cfg]
[include klipper-macros.cfg]
[include klipper-macros-extras.cfg]

[include TEST_SPEED.cfg]
[include mcu-linux.cfg]

[include test_probe_accuracy.cfg]

[gcode_macro heatsoak]
gcode:
  M140 S110
  M106 S255
  G32 ; Home all axes + QGL + center
  G0 X150 Y150 Z50 F3500
  

[gcode_macro mario_leveL_end]
description: Super Mario level end tune
gcode:
  M300 P137 S196
  M300 P1 S262
  M300 P137 S165
  M300 P1 S330
  M300 P138 S196
  M300 P137 S392
  M300 P1 S523
  M300 P137 S330
  M300 P1 S659
  M300 P138 S392
  M300 P393 S784
  M300 P21 S0
  M300 P393 S659
  M300 P21 S0
  M300 P137 S208
  M300 P1 S262
  M300 P137 S156
  M300 P1 S311
  M300 P138 S208
  M300 P137 S415
  M300 P1 S523
  M300 P137 S311
  M300 P1 S622
  M300 P138 S415
  M300 P393 S831
  M300 P21 S0
  M300 P393 S622
  M300 P21 S0
  M300 P137 S233
  M300 P1 S294
  M300 P137 S175
  M300 P1 S349
  M300 P138 S233
  M300 P137 S466
  M300 P1 S587
  M300 P137 S349
  M300 P1 S698
  M300 P138 S466
  M300 P393 S932
  M300 P21 S0
  M300 P137 S932
  M300 P138 S932
  M300 P139 S932
  M300 P393 S1047

[gcode_macro mario_tune]
description: Super Mario level completed tune
gcode:
    M300 S1046 P150
    M300 S1318 P150
    M300 S1567 P150
    M300 S2093 P150
    M300 S2637 P150
    M300 S3135 P400
    M300 S2637 P400
    M300 S1046 P150
    M300 S1244 P150
    M300 S1661 P150
    M300 S2093 P150
    M300 S2489 P150
    M300 S3322 P400
    M300 S2489 P400
    M300 S1174 P150
    M300 S1396 P150
    M300 S932 P150
    M300 S2349 P150
    M300 S2793 P150
    M300 S1864 P150
    M300 S0 P400
    M300 S1864 P120
    M300 S0 P60
    M300 S1864 P120
    M300 S0 P60
    M300 S1864 P120
    M300 S0 P60
    M300 S4186 P900 ;Congrats


[temperature_sensor mcu]
sensor_type: temperature_mcu

[temperature_sensor host]
sensor_type: temperature_host

# z_offset = -2.575 #-1.860

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = -1.410
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.043502, -0.003998, 0.042252
#*# 	-0.005248, 0.002252, 0.033502
#*# 	0.038502, 0.013502, 0.046002
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 81.3
#*# max_x = 234.46
#*# min_y = 81.3
#*# max_y = 234.46
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 40.026
#*# pid_ki = 0.901
#*# pid_kd = 444.293
#*#
#*# [input_shaper]
#*# shaper_type_x = 3hump_ei
#*# shaper_freq_x = 84.8
#*# shaper_type_y = mzv
#*# shaper_freq_y = 40.4
